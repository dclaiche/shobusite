{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Think\\\\shobu.com\\\\client\\\\src\\\\components\\\\Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport Landing from \"./landing\";\nimport Lobby from './Lobby';\nimport socket from './../apis/port';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialState = {\n  landing: true,\n  lobby: false,\n  pl_one_name: \"\",\n  lobby_waiting: true,\n  code: \"\",\n  isPlayer_one: false\n};\nlet initialGameState = {\n  p1_name: \"\",\n  p2_name: \"\",\n  p1_score: 0,\n  p2_score: 0,\n  ties: 0,\n  p1_turn: true,\n  grid0: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n};\n\nconst Container = () => {\n  _s();\n\n  const [state, setState] = React.useState(initialState);\n  const [gameState, setGameState] = React.useState(initialGameState);\n  React.useEffect(() => {\n    socket.on(\"session-created\", (name, code) => {\n      setState({\n        landing: false,\n        lobby: true,\n        lobby_waiting: true,\n        pl_one_name: name,\n        code: code,\n        isPlayer_one: true //if you created the session, you are player one. \n\n      });\n    });\n    socket.on(\"valid-code\", gameState => {\n      setState({\n        lobby_waiting: false,\n        landing: false,\n        lobby: true,\n        pl_one_name: name,\n        code: code,\n        isPlayer_one: true\n      });\n      setGameState({\n        gameState\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.landing && /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }, this), state.lobby && /*#__PURE__*/_jsxDEV(Lobby, {\n      gamestate: gamestate,\n      waiting: state.lobby_waiting,\n      code: state.code,\n      isPlayer_one: state.isPlayer_one\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"Wc4LVynoPzTR9RsLYyH/WGDrzhA=\");\n\n_c = Container;\nexport default Container; // export default class Container extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             landing:true,\n//             lobby:false,\n//             pl_one_name:\"\",\n//             lobby_waiting:true,\n//             code:\"\",\n//             isPlayer_one:false,\n//             gameState: {            \n//                 p1_name: \"\",\n//                 p2_name: \"\",\n//                 p1_score: 0,\n//                 p2_score: 0,\n//                 ties: 0,\n//                 p1_turn: true,\n//                 grid0: [0,0,0,\n//                     0,0,0,\n//                     0,0,0]\n//             }\n//         }\n//     }\n//     componentDidMount=()=>{\n//         socket.on(\"session-created\",(name,code)=>{this.setState({\n//             landing:false,\n//             lobby:true,\n//             pl_one_name: name,\n//             code:code,\n//             isPlayer_one:true //if you created the session, you are player one. \n//         })})\n//         socket.on(\"valid-code\",(gameState)=>{\n//             this.setState({\n//                 lobby_waiting: false,\n//                 landing:false,\n//                 lobby:true,\n//                 gameState: gameState\n//            })\n//         })\n//     }\n//     render=()=>{\n//         const gamestate = this.state.gameState;\n//         return (\n//             <div>\n//                 {this.state.landing && <Landing/>}\n//                 {this.state.lobby && <Lobby gamestate={gamestate} waiting={this.state.lobby_waiting} code={this.state.code} isPlayer_one={this.state.isPlayer_one} /> }\n//             </div>\n//         )\n//     }\n// }\n//note to self: constructor method in a class is called after calling other methods and setting attributes \n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Users/Think/shobu.com/client/src/components/Container.js"],"names":["React","Component","Landing","Lobby","socket","initialState","landing","lobby","pl_one_name","lobby_waiting","code","isPlayer_one","initialGameState","p1_name","p2_name","p1_score","p2_score","ties","p1_turn","grid0","Container","state","setState","useState","gameState","setGameState","useEffect","on","name","gamestate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Landing from \"./landing\";\r\nimport Lobby from './Lobby';\r\nimport socket from './../apis/port';\r\n\r\nlet initialState = {\r\n    landing:true,\r\n    lobby:false,\r\n\r\n    pl_one_name:\"\",\r\n    lobby_waiting:true,\r\n    code:\"\",\r\n    isPlayer_one:false\r\n}\r\n\r\nlet initialGameState = {            \r\n        p1_name: \"\",\r\n        p2_name: \"\",\r\n        p1_score: 0,\r\n        p2_score: 0,\r\n        ties: 0,\r\n        p1_turn: true,\r\n        grid0: [0,0,0,\r\n            0,0,0,\r\n            0,0,0]\r\n\r\n    }\r\n\r\nconst Container = () => {\r\n    const [state, setState] = React.useState(initialState)\r\n    const [gameState, setGameState] = React.useState(initialGameState)\r\n\r\n    React.useEffect(()=>{\r\n        socket.on(\"session-created\",(name,code)=>{setState({\r\n            landing:false,\r\n            lobby:true,\r\n            lobby_waiting:true,\r\n            pl_one_name: name,\r\n            code:code,\r\n            isPlayer_one:true //if you created the session, you are player one. \r\n        })})\r\n\r\n        socket.on(\"valid-code\",(gameState)=>{\r\n            setState({\r\n                lobby_waiting: false,\r\n                landing:false,\r\n                lobby:true,\r\n                pl_one_name: name,\r\n                code:code,\r\n                isPlayer_one:true\r\n           })\r\n           setGameState({gameState})          \r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {state.landing && <Landing/>}\r\n     \r\n            {state.lobby && <Lobby gamestate={gamestate} waiting={state.lobby_waiting} code={state.code} isPlayer_one={state.isPlayer_one} /> }\r\n        </div>\r\n    )\r\n}\r\nexport default Container;\r\n// export default class Container extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             landing:true,\r\n//             lobby:false,\r\n\r\n//             pl_one_name:\"\",\r\n//             lobby_waiting:true,\r\n//             code:\"\",\r\n//             isPlayer_one:false,\r\n\r\n//             gameState: {            \r\n//                 p1_name: \"\",\r\n//                 p2_name: \"\",\r\n//                 p1_score: 0,\r\n//                 p2_score: 0,\r\n//                 ties: 0,\r\n//                 p1_turn: true,\r\n//                 grid0: [0,0,0,\r\n//                     0,0,0,\r\n//                     0,0,0]\r\n        \r\n//             }\r\n\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount=()=>{\r\n//         socket.on(\"session-created\",(name,code)=>{this.setState({\r\n//             landing:false,\r\n//             lobby:true,\r\n            \r\n\r\n//             pl_one_name: name,\r\n//             code:code,\r\n//             isPlayer_one:true //if you created the session, you are player one. \r\n\r\n//         })})\r\n\r\n//         socket.on(\"valid-code\",(gameState)=>{\r\n            \r\n            \r\n            \r\n//             this.setState({\r\n//                 lobby_waiting: false,\r\n//                 landing:false,\r\n//                 lobby:true,\r\n            \r\n//                 gameState: gameState\r\n\r\n//            })\r\n           \r\n            \r\n           \r\n//         })\r\n//     }\r\n    \r\n    \r\n//     render=()=>{\r\n        \r\n//         const gamestate = this.state.gameState;\r\n\r\n//         return (\r\n//             <div>\r\n//                 {this.state.landing && <Landing/>}\r\n         \r\n//                 {this.state.lobby && <Lobby gamestate={gamestate} waiting={this.state.lobby_waiting} code={this.state.code} isPlayer_one={this.state.isPlayer_one} /> }\r\n                \r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n//note to self: constructor method in a class is called after calling other methods and setting attributes "]},"metadata":{},"sourceType":"module"}